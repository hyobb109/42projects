#include "Character.hpp"
#include "Cure.hpp"
#include "Ice.hpp"
#include "MateriaSource.hpp"

// void check() { system("leaks a.out"); }

int main() {
  // atexit(check);
  std::cout << "=======================\n";
  IMateriaSource* src = new MateriaSource();
  std::cout << "ðŸ§ª ë§ˆë²• ë°°ìš°ëŠ” ì¤‘...\n";
  src->learnMateria(NULL);
  src->learnMateria(new Ice());
  src->learnMateria(new Cure());
  src->learnMateria(new Ice());
  src->learnMateria(new Cure());
  src->learnMateria(new Cure());
  std::cout << "=======================\n";

  ICharacter* hippo = new Character("í•˜ë§ˆ");

  std::cout << "âœ¨ í•˜ë§ˆ ë§ˆë²• ìž¥ì°© ì¤‘...\n";
  AMateria* tmp;
  tmp = src->createMateria("blabla");
  hippo->equip(tmp);
  tmp = src->createMateria("ice");
  hippo->equip(tmp);
  tmp = src->createMateria("cure");
  hippo->equip(tmp);
  tmp = src->createMateria("ice");
  hippo->equip(tmp);
  tmp = src->createMateria("cure");
  hippo->equip(tmp);
  tmp = src->createMateria("cure");
  hippo->equip(tmp);
  std::cout << "=======================\n";
  ICharacter* alpaca = new Character("ì•ŒíŒŒì¹´");

  std::cout << "ðŸ”® í•˜ë§ˆ->ì•ŒíŒŒì¹´ ë§ˆë²• ì‚¬ìš© ì¤‘...\n";
  hippo->use(0, *alpaca);
  hippo->use(1, *alpaca);
  hippo->use(2, *alpaca);
  hippo->use(3, *alpaca);
  hippo->use(4, *alpaca);
  std::cout << "=======================\n";
  hippo->unequip(3);
  hippo->use(3, *alpaca);
  hippo->equip(src->createMateria("ice"));
  hippo->use(3, *alpaca);
  std::cout << "=======================\n";

  delete alpaca;
  delete hippo;
  delete src;

  return 0;
}